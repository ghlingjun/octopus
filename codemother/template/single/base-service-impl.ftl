package ${servicePackage}.impl.base;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;

import com.primeco.base.BaseSvcImpl;
import ${servicePackage}.base.Base${schema.modelName}Service;
import ${mapperPackage}.${schema.modelName}Mapper;
import ${modelPackage}.${schema.modelName};

<#macro listKeyParam>
<#if schema.key.complex>
<#list schema.key.columnDefList as columnDef>
${config.toShortJavaType(columnDef)} ${columnDef.javaName}<#if columnDef_has_next>,</#if><#rt />
</#list>
<#else>
${config.toShortJavaType(schema.key)} key<#t />
</#if>
</#macro><#t />

<#macro listKey>
<#if schema.key.complex>
<#list schema.key.columnDefList as columnDef>
${columnDef.javaName}<#if columnDef_has_next>, </#if><#rt />
</#list>
<#else>
key<#t />
</#if>
</#macro><#t />

/**
 * Please don't modify this class manually.
 * This class is generated by code-mother plugin.
 */
public class Base${schema.modelName}ServiceImpl extends BaseSvcImpl implements Base${schema.modelName}Service {
	<#--protected ${schema.modelName}Mapper getMapper() {
		return getMapper(${schema.modelName}Mapper.class);
	}-->

    private ${schema.modelName}Mapper mapper;

    public ${schema.modelName}Mapper getMapper() {
        return mapper;
    }

    @Autowired
    public void setMapper(${schema.modelName}Mapper mapper) {
        this.mapper = mapper;
    }

<#if schema.isAllowed("countAll")>
	public Integer countAll() {
		return mapper.countAll();
	}
</#if>
<#if schema.isAllowed("countBy")>
	public Integer countBy(Map<String,Object> params) {
		return mapper.countBy(params);
	}
</#if>
<#if schema.isAllowed("listAll")>
	public List<${schema.modelName}> listAll() {
		return mapper.listAll();
	}
</#if>
<#if schema.isAllowed("listAllPaged")>
	public List<${schema.modelName}> listAllPaged(long offset, long pageSize) {
		return mapper.listAllPaged(offset, pageSize);
	}
</#if>
<#if schema.isAllowed("listBy")>
	public List<${schema.modelName}> listBy(Map<String,Object> params){
		return mapper.listBy(params);
	}
</#if>
<#if schema.isAllowed("insert")>
	<#if !schema.key.complex && schema.key.generator?has_content && schema.key.generator="native">
    public Integer insert(${schema.modelName} model) {
    	return mapper.insert(model);
    }
	<#else>
	public void insert(${schema.modelName} model) {
		mapper.insert(model);
	}
	</#if>
</#if>
<#if schema.isAllowed("update")>
	public void update(${schema.modelName} model) {
		mapper.update(model);
	}
</#if>
<#if schema.isAllowed("deleteByKey")>
	public void deleteByKey(<@listKeyParam />) {
		mapper.deleteByKey(<@listKey />);
	}
</#if>
<#if schema.isAllowed("deleteByModel")>
	public void deleteByModel(${schema.modelName} model) {
		mapper.deleteByModelKey(model);
	}
</#if>
<#if schema.isAllowed("getByKey")>
	public ${schema.modelName} getByKey(<@listKeyParam />) {
		return mapper.getByKey(<@listKey />);
	}
</#if>
}